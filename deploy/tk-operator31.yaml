
                                If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: integer
                              format: int64
                            fsGroupChangePolicy:
                              description: |-
                                fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                                before being exposed inside Pod. This field will only apply to
                                volume types which support fsGroup based ownership(and permissions).
                                It will have no effect on ephemeral volume types such as: secret, configmaps
                                and emptydir.
                                Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: string
                            runAsGroup:
                              description: |-
                                The GID to run the entrypoint of the container process.
                                Uses runtime default if unset.
                                May also be set in SecurityContext.  If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence
                                for that container.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: integer
                              format: int64
                            runAsNonRoot:
                              description: |-
                                Indicates that the container must run as a non-root user.
                                If true, the Kubelet will validate the image at runtime to ensure that it
                                does not run as UID 0 (root) and fail to start the container if it does.
                                If unset or false, no such validation will be performed.
                                May also be set in SecurityContext.  If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: |-
                                The UID to run the entrypoint of the container process.
                                Defaults to user specified in image metadata if unspecified.
                                May also be set in SecurityContext.  If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence
                                for that container.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: integer
                              format: int64
                            seLinuxOptions:
                              description: |-
                                The SELinux context to be applied to all containers.
                                If unspecified, the container runtime will allocate a random SELinux context for each
                                container.  May also be set in SecurityContext.  If set in
                                both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                                takes precedence for that container.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: object
                              properties:
                                level:
                                  description: Level is SELinux level label that applies to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies to the container.
                                  type: string
                            seccompProfile:
                              description: |-
                                The seccomp options to use by the containers in this pod.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: object
                              required:
                                - type
                              properties:
                                localhostProfile:
                                  description: |-
                                    localhostProfile indicates a profile defined in a file on the node should be used.
                                    The profile must be preconfigured on the node to work.
                                    Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                    Must be set if type is "Localhost". Must NOT be set for any other type.
                                  type: string
                                type:
                                  description: |-
                                    type indicates which kind of seccomp profile will be applied.
                                    Valid options are:

                                    Localhost - a profile defined in a file on the node should be used.
                                    RuntimeDefault - the container runtime default profile should be used.
                                    Unconfined - no profile should be applied.
                                  type: string
                            supplementalGroups:
                              description: |-
                                A list of groups applied to the first process run in each container, in
                                addition to the container's primary GID and fsGroup (if specified).  If
                                the SupplementalGroupsPolicy feature is enabled, the
                                supplementalGroupsPolicy field determines whether these are in addition
                                to or instead of any group memberships defined in the container image.
                                If unspecified, no additional groups are added, though group memberships
                                defined in the container image may still be used, depending on the
                                supplementalGroupsPolicy field.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: array
                              items:
                                type: integer
                                format: int64
                              x-kubernetes-list-type: atomic
                            supplementalGroupsPolicy:
                              description: |-
                                Defines how supplemental groups of the first container processes are calculated.
                                Valid values are "Merge" and "Strict". If not specified, "Merge" is used.
                                (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled
                                and the container runtime must implement support for this feature.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: string
                            sysctls:
                              description: |-
                                Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                                sysctls (by the container runtime) might fail to launch.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: array
                              items:
                                description: Sysctl defines a kernel parameter to be set
                                type: object
                                required:
                                  - name
                                  - value
                                properties:
                                  name:
                                    description: Name of a property to set
                                    type: string
                                  value:
                                    description: Value of a property to set
                                    type: string
                              x-kubernetes-list-type: atomic
                            windowsOptions:
                              description: |-
                                The Windows specific settings applied to all containers.
                                If unspecified, the options within a container's SecurityContext will be used.
                                If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name is linux.
                              type: object
                              properties:
                                gmsaCredentialSpec:
                                  description: |-
                                    GMSACredentialSpec is where the GMSA admission webhook
                                    (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                    GMSA credential spec named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                                  type: string
                                hostProcess:
                                  description: |-
                                    HostProcess determines if a container should be run as a 'Host Process' container.
                                    All of a Pod's containers must have the same effective HostProcess value
                                    (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                    In addition, if HostProcess is true then HostNetwork must also be set to true.
                                  type: boolean
                                runAsUserName:
                                  description: |-
                                    The UserName in Windows to run the entrypoint of the container process.
                                    Defaults to the user specified in image metadata if unspecified.
                                    May also be set in PodSecurityContext. If set in both SecurityContext and
                                    PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  type: string
                        tolerations:
                          description: If specified, the pod's tolerations.
                          type: array
                          items:
                            description: |-
                              The pod this Toleration is attached to tolerates any taint that matches
                              the triple <key,value,effect> using the matching operator <operator>.
                            type: object
                            properties:
                              effect:
                                description: |-
                                  Effect indicates the taint effect to match. Empty means match all taint effects.
                                  When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                type: string
                              key:
                                description: |-
                                  Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                  If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                type: string
                              operator:
                                description: |-
                                  Operator represents a key's relationship to the value.
                                  Valid operators are Exists and Equal. Defaults to Equal.
                                  Exists is equivalent to wildcard for value, so that a pod can
                                  tolerate all taints of a particular category.
                                type: string
                              tolerationSeconds:
                                description: |-
                                  TolerationSeconds represents the period of time the toleration (which must be
                                  of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                  it is not set, which means tolerate the taint forever (do not evict). Zero and
                                  negative values will be treated as 0 (evict immediately) by the system.
                                type: integer
                                format: int64
                              value:
                                description: |-
                                  Value is the taint value the toleration matches to.
                                  If the operator is Exists, the value should be empty, otherwise just a regular string.
                                type: string
                          x-kubernetes-list-type: atomic
                        topologySpreadConstraints:
                          description: |-
                            TopologySpreadConstraints controls how Pods are spread across your cluster among
                            failure-domains such as regions, zones, nodes, and other user-defined topology domains.
                          type: array
                          items:
                            description: TopologySpreadConstraint specifies how to spread matching pods among the given topology.
                            type: object
                            required:
                              - maxSkew
                              - topologyKey
                              - whenUnsatisfiable
                            properties:
                              labelSelector:
                                description: |-
                                  LabelSelector is used to find matching pods.
                                  Pods that match this label selector are counted to determine the number of pods
                                  in their corresponding topology domain.
                                type: object
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    type: array
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      type: object
                                      required:
                                        - key
                                        - operator
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          type: array
                                          items:
                                            type: string
                                          x-kubernetes-list-type: atomic
                                    x-kubernetes-list-type: atomic
                                  matchLabels:
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                    additionalProperties:
                                      type: string
                                x-kubernetes-map-type: atomic
                              matchLabelKeys:
                                description: |-
                                  MatchLabelKeys is a set of pod label keys to select the pods over which
                                  spreading will be calculated. The keys are used to lookup values from the
                                  incoming pod labels, those key-value labels are ANDed with labelSelector
                                  to select the group of existing pods over which spreading will be calculated
                                  for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                  MatchLabelKeys cannot be set when LabelSelector isn't set.
                                  Keys that don't exist in the incoming pod labels will
                                  be ignored. A null or empty list means only match against labelSelector.

                                  This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
                                type: array
                                items:
                                  type: string
                                x-kubernetes-list-type: atomic
                              maxSkew:
                                description: |-
                                  MaxSkew describes the degree to which pods may be unevenly distributed.
                                  When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
                                  between the number of matching pods in the target topology and the global minimum.
                                  The global minimum is the minimum number of matching pods in an eligible domain
                                  or zero if the number of eligible domains is less than MinDomains.
                                  For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                                  labelSelector spread as 2/2/1:
                                  In this case, the global minimum is 1.
                                  | zone1 | zone2 | zone3 |
                                  |  P P  |  P P  |   P   |
                                  - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;
                                  scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)
                                  violate MaxSkew(1).
                                  - if MaxSkew is 2, incoming pod can be scheduled onto any zone.
                                  When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence
                                  to topologies that satisfy it.
                                  It's a required field. Default value is 1 and 0 is not allowed.
                                type: integer
                                format: int32
                              minDomains:
                                description: |-
                                  MinDomains indicates a minimum number of eligible domains.
                                  When the number of eligible domains with matching topology keys is less than minDomains,
                                  Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed.
                                  And when the number of eligible domains with matching topology keys equals or greater than minDomains,
                                  this value has no effect on scheduling.
                                  As a result, when the number of eligible domains is less than minDomains,
                                  scheduler won't schedule more than maxSkew Pods to those domains.
                                  If value is nil, the constraint behaves as if MinDomains is equal to 1.
                                  Valid values are integers greater than 0.
                                  When value is not nil, WhenUnsatisfiable must be DoNotSchedule.

                                  For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same
                                  labelSelector spread as 2/2/2:
                                  | zone1 | zone2 | zone3 |
                                  |  P P  |  P P  |  P P  |
                                  The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0.
                                  In this situation, new pod with the same labelSelector cannot be scheduled,
                                  because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,
                                  it will violate MaxSkew.
                                type: integer
                                format: int32
                              nodeAffinityPolicy:
                                description: |-
                                  NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector
                                  when calculating pod topology spread skew. Options are:
                                  - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.
                                  - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.

                                  If this value is nil, the behavior is equivalent to the Honor policy.
                                  This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                                type: string
                              nodeTaintsPolicy:
                                description: |-
                                  NodeTaintsPolicy indicates how we will treat node taints when calculating
                                  pod topology spread skew. Options are:
                                  - Honor: nodes without taints, along with tainted nodes for which the incoming pod
                                  has a toleration, are included.
                                  - Ignore: node taints are ignored. All nodes are included.

                                  If this value is nil, the behavior is equivalent to the Ignore policy.
                                  This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                                type: string
                              topologyKey:
                                description: |-
                                  TopologyKey is the key of node labels. Nodes that have a label with this key
                                  and identical values are considered to be in the same topology.
                                  We consider each <key, value> as a "bucket", and try to put balanced number
                                  of pods into each bucket.
                                  We define a domain as a particular instance of a topology.
                                  Also, we define an eligible domain as a domain whose nodes meet the requirements of
                                  nodeAffinityPolicy and nodeTaintsPolicy.
                                  e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology.
                                  And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology.
                                  It's a required field.
                                type: string
                              whenUnsatisfiable:
                                description: |-
                                  WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy
                                  the spread constraint.
                                  - DoNotSchedule (default) tells the scheduler not to schedule it.
                                  - ScheduleAnyway tells the scheduler to schedule the pod in any location,
                                    but giving higher precedence to topologies that would help reduce the
                                    skew.
                                  A constraint is considered "Unsatisfiable" for an incoming pod
                                  if and only if every possible node assignment for that pod would violate
                                  "MaxSkew" on some topology.
                                  For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                                  labelSelector spread as 3/1/1:
                                  | zone1 | zone2 | zone3 |
                                  | P P P |   P   |   P   |
                                  If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled
                                  to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies
                                  MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler
                                  won't make it *more* imbalanced.
                                  It's a required field.
                                type: string
                          x-kubernetes-list-type: atomic
                        volumes:
                          description: |-
                            List of volumes that can be mounted by containers belonging to the pod.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes
                            See Pod.spec.volumes (API version: v1)
                          x-kubernetes-preserve-unknown-fields: true
                    serviceAccountName:
                      type: string
                timeouts:
                  description: |-
                    Time after which the Pipeline times out.
                    Currently three keys are accepted in the map
                    pipeline, tasks and finally
                    with Timeouts.pipeline >= Timeouts.tasks + Timeouts.finally
                  type: object
                  properties:
                    finally:
                      description: Finally sets the maximum allowed duration of this pipeline's finally
                      type: string
                    pipeline:
                      description: Pipeline sets the maximum allowed duration for execution of the entire pipeline. The sum of individual timeouts for tasks and finally must not exceed this value.
                      type: string
                    tasks:
                      description: Tasks sets the maximum allowed duration of this pipeline's tasks
                      type: string
                workspaces:
                  description: |-
                    Workspaces holds a set of workspace bindings that must match names
                    with those declared in the pipeline.
                  type: array
                  items:
                    description: WorkspaceBinding maps a Task's declared workspace to a Volume.
                    type: object
                    required:
                      - name
                    properties:
                      configMap:
                        description: ConfigMap represents a configMap that should populate this workspace.
                        type: object
                        properties:
                          defaultMode:
                            description: |-
                              defaultMode is optional: mode bits used to set permissions on created files by default.
                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                              Defaults to 0644.
                              Directories within the path are not affected by this setting.
                              This might be in conflict with other options that affect the file
                              mode, like fsGroup, and the result can be other mode bits set.
                            type: integer
                            format: int32
                          items:
                            description: |-
                              items if unspecified, each key-value pair in the Data field of the referenced
                              ConfigMap will be projected into the volume as a file whose name is the
                              key and content is the value. If specified, the listed keys will be
                              projected into the specified paths, and unlisted keys will not be
                              present. If a key is specified which is not present in the ConfigMap,
                              the volume setup will error unless it is marked optional. Paths must be
                              relative and may not contain the '..' path or start with '..'.
                            type: array
                            items:
                              description: Maps a string key to a path within a volume.
                              type: object
                              required:
                                - key
                                - path
                              properties:
                                key:
                                  description: key is the key to project.
                                  type: string
                                mode:
                                  description: |-
                                    mode is Optional: mode bits used to set permissions on this file.
                                    Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                    YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                    If not specified, the volume defaultMode will be used.
                                    This might be in conflict with other options that affect the file
                                    mode, like fsGroup, and the result can be other mode bits set.
                                  type: integer
                                  format: int32
                                path:
                                  description: |-
                                    path is the relative path of the file to map the key to.
                                    May not be an absolute path.
                                    May not contain the path element '..'.
                                    May not start with the string '..'.
                                  type: string
                            x-kubernetes-list-type: atomic
                          name:
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                            default: ""
                          optional:
                            description: optional specify whether the ConfigMap or its keys must be defined
                            type: boolean
                        x-kubernetes-map-type: atomic
                      csi:
                        description: CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers.
                        type: object
                        required:
                          - driver
                        properties:
                          driver:
                            description: |-
                              driver is the name of the CSI driver that handles this volume.
                              Consult with your admin for the correct name as registered in the cluster.
                            type: string
                          fsType:
                            description: |-
                              fsType to mount. Ex. "ext4", "xfs", "ntfs".
                              If not provided, the empty value is passed to the associated CSI driver
                              which will determine the default filesystem to apply.
                            type: string
                          nodePublishSecretRef:
                            description: |-
                              nodePublishSecretRef is a reference to the secret object containing
                              sensitive information to pass to the CSI driver to complete the CSI
                              NodePublishVolume and NodeUnpublishVolume calls.
                              This field is optional, and  may be empty if no secret is required. If the
                              secret object contains more than one secret, all secret references are passed.
                            type: object
                            properties:
                              name:
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                                default: ""
                            x-kubernetes-map-type: atomic
                          readOnly:
                            description: |-
                              readOnly specifies a read-only configuration for the volume.
                              Defaults to false (read/write).
                            type: boolean
                          volumeAttributes:
                            description: |-
                              volumeAttributes stores driver-specific properties that are passed to the CSI
                              driver. Consult your driver's documentation for supported values.
                            type: object
                            additionalProperties:
                              type: string
                      emptyDir:
                        description: |-
                          EmptyDir represents a temporary directory that shares a Task's lifetime.
                          More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                          Either this OR PersistentVolumeClaim can be used.
                        type: object
                        properties:
                          medium:
                            description: |-
                              medium represents what type of storage medium should back this directory.
                              The default is "" which means to use the node's default medium.
                              Must be an empty string (default) or Memory.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                            type: string
                          sizeLimit:
                            description: |-
                              sizeLimit is the total amount of local storage required for this EmptyDir volume.
                              The size limit is also applicable for memory medium.
                              The maximum usage on memory medium EmptyDir would be the minimum value between
                              the SizeLimit specified here and the sum of memory limits of all containers in a pod.
                              The default is nil which means that the limit is undefined.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                      name:
                        description: Name is the name of the workspace populated by the volume.
                        type: string
                      persistentVolumeClaim:
                        description: |-
                          PersistentVolumeClaimVolumeSource represents a reference to a
                          PersistentVolumeClaim in the same namespace. Either this OR EmptyDir can be used.
                        type: object
                        required:
                          - claimName
                        properties:
                          claimName:
                            description: |-
                              claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                            type: string
                          readOnly:
                            description: |-
                              readOnly Will force the ReadOnly setting in VolumeMounts.
                              Default false.
                            type: boolean
                      projected:
                        description: Projected represents a projected volume that should populate this workspace.
                        type: object
                        properties:
                          defaultMode:
                            description: |-
                              defaultMode are the mode bits used to set permissions on created files by default.
                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                              Directories within the path are not affected by this setting.
                              This might be in conflict with other options that affect the file
                              mode, like fsGroup, and the result can be other mode bits set.
                            type: integer
                            format: int32
                          sources:
                            description: |-
                              sources is the list of volume projections. Each entry in this list
                              handles one source.
                            type: array
                            items:
                              description: |-
                                Projection that may be projected along with other supported volume types.
                                Exactly one of these fields must be set.
                              type: object
                              properties:
                                clusterTrustBundle:
                                  description: |-
                                    ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
                                    of ClusterTrustBundle objects in an auto-updating file.

                                    Alpha, gated by the ClusterTrustBundleProjection feature gate.

                                    ClusterTrustBundle objects can either be selected by name, or by the
                                    combination of signer name and a label selector.

                                    Kubelet performs aggressive normalization of the PEM contents written
                                    into the pod filesystem.  Esoteric PEM features such as inter-block
                                    comments and block headers are stripped.  Certificates are deduplicated.
                                    The ordering of certificates within the file is arbitrary, and Kubelet
                                    may change the order over time.
                                  type: object
                                  required:
                                    - path
                                  properties:
                                    labelSelector:
                                      description: |-
                                        Select all ClusterTrustBundles that match this label selector.  Only has
                                        effect if signerName is set.  Mutually-exclusive with name.  If unset,
                                        interpreted as "match nothing".  If set but empty, interpreted as "match
                                        everything".
                                      type: object
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          type: array
                                          items:
                                            description: |-
                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                              relates the key and values.
                                            type: object
                                            required:
                                              - key
                                              - operator
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  operator represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: |-
                                                  values is an array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array is replaced during a strategic
                                                  merge patch.
                                                type: array
                                                items:
                                                  type: string
                                                x-kubernetes-list-type: atomic
                                          x-kubernetes-list-type: atomic
                                        matchLabels:
                                          description: |-
                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                          additionalProperties:
                                            type: string
                                      x-kubernetes-map-type: atomic
                                    name:
                                      description: |-
                                        Select a single ClusterTrustBundle by object name.  Mutually-exclusive
                                        with signerName and labelSelector.
                                      type: string
                                    optional:
                                      description: |-
                                        If true, don't block pod startup if the referenced ClusterTrustBundle(s)
                                        aren't available.  If using name, then the named ClusterTrustBundle is
                                        allowed not to exist.  If using signerName, then the combination of
                                        signerName and labelSelector is allowed to match zero
                                        ClusterTrustBundles.
                                      type: boolean
                                    path:
                                      description: Relative path from the volume root to write the bundle.
                                      type: string
                                    signerName:
                                      description: |-
                                        Select all ClusterTrustBundles that match this signer name.
                                        Mutually-exclusive with name.  The contents of all selected
                                        ClusterTrustBundles will be unified and deduplicated.
                                      type: string
                                configMap:
                                  description: configMap information about the configMap data to project
                                  type: object
                                  properties:
                                    items:
                                      description: |-
                                        items if unspecified, each key-value pair in the Data field of the referenced
                                        ConfigMap will be projected into the volume as a file whose name is the
                                        key and content is the value. If specified, the listed keys will be
                                        projected into the specified paths, and unlisted keys will not be
                                        present. If a key is specified which is not present in the ConfigMap,
                                        the volume setup will error unless it is marked optional. Paths must be
                                        relative and may not contain the '..' path or start with '..'.
                                      type: array
                                      items:
                                        description: Maps a string key to a path within a volume.
                                        type: object
                                        required:
                                          - key
                                          - path
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: |-
                                              mode is Optional: mode bits used to set permissions on this file.
                                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                              If not specified, the volume defaultMode will be used.
                                              This might be in conflict with other options that affect the file
                                              mode, like fsGroup, and the result can be other mode bits set.
                                            type: integer
                                            format: int32
                                          path:
                                            description: |-
                                              path is the relative path of the file to map the key to.
                                              May not be an absolute path.
                                              May not contain the path element '..'.
                                              May not start with the string '..'.
                                            type: string
                                      x-kubernetes-list-type: atomic
                                    name:
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                      default: ""
                                    optional:
                                      description: optional specify whether the ConfigMap or its keys must be defined
                                      type: boolean
                                  x-kubernetes-map-type: atomic
                                downwardAPI:
                                  description: downwardAPI information about the downwardAPI data to project
                                  type: object
                                  properties:
                                    items:
                                      description: Items is a list of DownwardAPIVolume file
                                      type: array
                                      items:
                                        description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                                        type: object
                                        required:
                                          - path
                                        properties:
                                          fieldRef:
                                            description: 'Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.'
                                            type: object
                                            required:
                                              - fieldPath
                                            properties:
                                              apiVersion:
                                                description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to select in the specified API version.
                                                type: string
                                            x-kubernetes-map-type: atomic
                                          mode:
                                            description: |-
                                              Optional: mode bits used to set permissions on this file, must be an octal value
                                              between 0000 and 0777 or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                              If not specified, the volume defaultMode will be used.
                                              This might be in conflict with other options that affect the file
                                              mode, like fsGroup, and the result can be other mode bits set.
                                            type: integer
                                            format: int32
                                          path:
                                            description: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                                            type: string
                                          resourceFieldRef:
                                            description: |-
                                              Selects a resource of the container: only resources limits and requests
                                              (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                            type: object
                                            required:
                                              - resource
                                            properties:
                                              containerName:
                                                description: 'Container name: required for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                description: Specifies the output format of the exposed resources, defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to select'
                                                type: string
                                            x-kubernetes-map-type: atomic
                                      x-kubernetes-list-type: atomic
                                secret:
                                  description: secret information about the secret data to project
                                  type: object
                                  properties:
                                    items:
                                      description: |-
                                        items if unspecified, each key-value pair in the Data field of the referenced
                                        Secret will be projected into the volume as a file whose name is the
                                        key and content is the value. If specified, the listed keys will be
                                        projected into the specified paths, and unlisted keys will not be
                                        present. If a key is specified which is not present in the Secret,
                                        the volume setup will error unless it is marked optional. Paths must be
                                        relative and may not contain the '..' path or start with '..'.
                                      type: array
                                      items:
                                        description: Maps a string key to a path within a volume.
                                        type: object
                                        required:
                                          - key
                                          - path
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: |-
                                              mode is Optional: mode bits used to set permissions on this file.
                                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                              If not specified, the volume defaultMode will be used.
                                              This might be in conflict with other options that affect the file
                                              mode, like fsGroup, and the result can be other mode bits set.
                                            type: integer
                                            format: int32
                                          path:
                                            description: |-
                                              path is the relative path of the file to map the key to.
                                              May not be an absolute path.
                                              May not contain the path element '..'.
                                              May not start with the string '..'.
                                            type: string
                                      x-kubernetes-list-type: atomic
                                    name:
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                      default: ""
                                    optional:
                                      description: optional field specify whether the Secret or its key must be defined
                                      type: boolean
                                  x-kubernetes-map-type: atomic
                                serviceAccountToken:
                                  description: serviceAccountToken is information about the serviceAccountToken data to project
                                  type: object
                                  required:
                                    - path
                                  properties:
                                    audience:
                                      description: |-
                                        audience is the intended audience of the token. A recipient of a token
                                        must identify itself with an identifier specified in the audience of the
                                        token, and otherwise should reject the token. The audience defaults to the
                                        identifier of the apiserver.
                                      type: string
                                    expirationSeconds:
                                      description: |-
                                        expirationSeconds is the requested duration of validity of the service
                                        account token. As the token approaches expiration, the kubelet volume
                                        plugin will proactively rotate the service account token. The kubelet will
                                        start trying to rotate the token if the token is older than 80 percent of
                                        its time to live or if the token is older than 24 hours.Defaults to 1 hour
                                        and must be at least 10 minutes.
                                      type: integer
                                      format: int64
                                    path:
                                      description: |-
                                        path is the path relative to the mount point of the file to project the
                                        token into.
                                      type: string
                            x-kubernetes-list-type: atomic
                      secret:
                        description: Secret represents a secret that should populate this workspace.
                        type: object
                        properties:
                          defaultMode:
                            description: |-
                              defaultMode is Optional: mode bits used to set permissions on created files by default.
                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                              YAML accepts both octal and decimal values, JSON requires decimal values
                              for mode bits. Defaults to 0644.
                              Directories within the path are not affected by this setting.
                              This might be in conflict with other options that affect the file
                              mode, like fsGroup, and the result can be other mode bits set.
                            type: integer
                            format: int32
                          items:
                            description: |-
                              items If unspecified, each key-value pair in the Data field of the referenced
                              Secret will be projected into the volume as a file whose name is the
                              key and content is the value. If specified, the listed keys will be
                              projected into the specified paths, and unlisted keys will not be
                              present. If a key is specified which is not present in the Secret,
                              the volume setup will error unless it is marked optional. Paths must be
                              relative and may not contain the '..' path or start with '..'.
                            type: array
                            items:
                              description: Maps a string key to a path within a volume.
                              type: object
                              required:
                                - key
                                - path
                              properties:
                                key:
                                  description: key is the key to project.
                                  type: string
                                mode:
                                  description: |-
                                    mode is Optional: mode bits used to set permissions on this file.
                                    Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                    YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                    If not specified, the volume defaultMode will be used.
                                    This might be in conflict with other options that affect the file
                                    mode, like fsGroup, and the result can be other mode bits set.
                                  type: integer
                                  format: int32
                                path:
                                  description: |-
                                    path is the relative path of the file to map the key to.
                                    May not be an absolute path.
                                    May not contain the path element '..'.
                                    May not start with the string '..'.
                                  type: string
                            x-kubernetes-list-type: atomic
                          optional:
                            description: optional field specify whether the Secret or its keys must be defined
                            type: boolean
                          secretName:
                            description: |-
                              secretName is the name of the secret in the pod's namespace to use.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                            type: string
                      subPath:
                        description: |-
                          SubPath is optionally a directory on the volume which should be used
                          for this binding (i.e. the volume will be mounted at this sub directory).
                        type: string
                      volumeClaimTemplate:
                        description: |-
                          VolumeClaimTemplate is a template for a claim that will be created in the same namespace.
                          The PipelineRun controller is responsible for creating a unique claim for each instance of PipelineRun.
                          See PersistentVolumeClaim (API version: v1)
                        x-kubernetes-preserve-unknown-fields: true
                  x-kubernetes-list-type: atomic
            status:
              description: PipelineRunStatus defines the observed state of PipelineRun
              type: object
              properties:
                annotations:
                  description: |-
                    Annotations is additional Status fields for the Resource to save some
                    additional State as well as convey more information to the user. This is
                    roughly akin to Annotations on any k8s resource, just the reconciler conveying
                    richer information outwards.
                  type: object
                  additionalProperties:
                    type: string
                childReferences:
                  description: list of TaskRun and Run names, PipelineTask names, and API versions/kinds for children of this PipelineRun.
                  type: array
                  items:
                    description: ChildStatusReference is used to point to the statuses of individual TaskRuns and Runs within this PipelineRun.
                    type: object
                    properties:
                      apiVersion:
                        type: string
                      displayName:
                        description: |-
                          DisplayName is a user-facing name of the pipelineTask that may be
                          used to populate a UI.
                        type: string
                      kind:
                        type: string
                      name:
                        description: Name is the name of the TaskRun or Run this is referencing.
                        type: string
                      pipelineTaskName:
                        description: PipelineTaskName is the name of the PipelineTask this is referencing.
                        type: string
                      whenExpressions:
                        description: WhenExpressions is the list of checks guarding the execution of the PipelineTask
                        type: array
                        items:
                          description: |-
                            WhenExpression allows a PipelineTask to declare expressions to be evaluated before the Task is run
                            to determine whether the Task should be executed or skipped
                          type: object
                          properties:
                            cel:
                              description: |-
                                CEL is a string of Common Language Expression, which can be used to conditionally execute
                                the task based on the result of the expression evaluation
                                More info about CEL syntax: https://github.com/google/cel-spec/blob/master/doc/langdef.md
                              type: string
                            input:
                              description: Input is the string for guard checking which can be a static input or an output from a parent Task
                              type: string
                            operator:
                              description: Operator that represents an Input's relationship to the values
                              type: string
                            values:
                              description: |-
                                Values is an array of strings, which is compared against the input, for guard checking
                                It must be non-empty
                              type: array
                              items:
                                type: string
                              x-kubernetes-list-type: atomic
                        x-kubernetes-list-type: atomic
                  x-kubernetes-list-type: atomic
                completionTime:
                  description: CompletionTime is the time the PipelineRun completed.
                  type: string
                  format: date-time
                conditions:
                  description: Conditions the latest available observations of a resource's current state.
                  type: array
                  items:
                    description: |-
                      Condition defines a readiness condition for a Knative resource.
                      See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties
                    type: object
                    required:
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time the condition transitioned from one status to another.
                          We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic
                          differences (all other things held constant).
                        type: string
                      message:
                        description: A human readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description: |-
                          Severity with which to treat failures of this type of condition.
                          When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                finallyStartTime:
                  description: FinallyStartTime is when all non-finally tasks have been completed and only finally tasks are being executed.
                  type: string
                  format: date-time
                observedGeneration:
                  description: |-
                    ObservedGeneration is the 'Generation' of the Service that
                    was last processed by the controller.
                  type: integer
                  format: int64
                pipelineSpec:
                  description: |-
                    PipelineSpec contains the exact spec used to instantiate the run.
                    See Pipeline.spec (API version: tekton.dev/v1)
                  x-kubernetes-preserve-unknown-fields: true
                provenance:
                  description: Provenance contains some key authenticated metadata about how a software artifact was built (what sources, what inputs/outputs, etc.).
                  type: object
                  properties:
                    featureFlags:
                      description: FeatureFlags identifies the feature flags that were used during the task/pipeline run
                      type: object
                      properties:
                        awaitSidecarReadiness:
                          type: boolean
                        coschedule:
                          type: string
                        disableAffinityAssistant:
                          type: boolean
                        disableCredsInit:
                          type: boolean
                        disableInlineSpec:
                          type: string
                        enableAPIFields:
                          type: string
                        enableArtifacts:
                          type: boolean
                        enableCELInWhenExpression:
                          type: boolean
                        enableConciseResolverSyntax:
                          type: boolean
                        enableKeepPodOnCancel:
                          type: boolean
                        enableKubernetesSidecar:
                          type: boolean
                        enableParamEnum:
                          type: boolean
                        enableProvenanceInStatus:
                          type: boolean
                        enableStepActions:
                          type: boolean
                        enforceNonfalsifiability:
                          type: string
                        maxResultSize:
                          type: integer
                        requireGitSSHSecretKnownHosts:
                          type: boolean
                        resultExtractionMethod:
                          type: string
                        runningInEnvWithInjectedSidecars:
                          type: boolean
                        sendCloudEventsForRuns:
                          type: boolean
                        setSecurityContext:
                          type: boolean
                        setSecurityContextReadOnlyRootFilesystem:
                          type: boolean
                        verificationNoMatchPolicy:
                          description: |-
                            VerificationNoMatchPolicy is the feature flag for "trusted-resources-verification-no-match-policy"
                            VerificationNoMatchPolicy can be set to "ignore", "warn" and "fail" values.
                            ignore: skip trusted resources verification when no matching verification policies found
                            warn: skip trusted resources verification when no matching verification policies found and log a warning
                            fail: fail the taskrun or pipelines run if no matching verification policies found
                          type: string
                    refSource:
                      description: RefSource identifies the source where a remote task/pipeline came from.
                      type: object
                      properties:
                        digest:
                          description: |-
                            Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.
                            Example: {"sha1": "f99d13e554ffcb696dee719fa85b695cb5b0f428"}
                          type: object
                          additionalProperties:
                            type: string
                        entryPoint:
                          description: |-
                            EntryPoint identifies the entry point into the build. This is often a path to a
                            build definition file and/or a target label within that file.
                            Example: "task/git-clone/0.8/git-clone.yaml"
                          type: string
                        uri:
                          description: |-
                            URI indicates the identity of the source of the build definition.
                            Example: "https://github.com/tektoncd/catalog"
                          type: string
                results:
                  description: Results are the list of results written out by the pipeline task's containers
                  type: array
                  items:
                    description: PipelineRunResult used to describe the results of a pipeline
                    type: object
                    required:
                      - name
                      - value
                    properties:
                      name:
                        description: Name is the result's name as declared by the Pipeline
                        type: string
                      value:
                        description: Value is the result returned from the execution of this PipelineRun
                        x-kubernetes-preserve-unknown-fields: true
                  x-kubernetes-list-type: atomic
                skippedTasks:
                  description: list of tasks that were skipped due to when expressions evaluating to false
                  type: array
                  items:
                    description: |-
                      SkippedTask is used to describe the Tasks that were skipped due to their When Expressions
                      evaluating to False. This is a struct because we are looking into including more details
                      about the When Expressions that caused this Task to be skipped.
                    type: object
                    required:
                      - name
                      - reason
                    properties:
                      name:
                        description: Name is the Pipeline Task name
                        type: string
                      reason:
                        description: Reason is the cause of the PipelineTask being skipped.
                        type: string
                      whenExpressions:
                        description: WhenExpressions is the list of checks guarding the execution of the PipelineTask
                        type: array
                        items:
                          description: |-
                            WhenExpression allows a PipelineTask to declare expressions to be evaluated before the Task is run
                            to determine whether the Task should be executed or skipped
                          type: object
                          properties:
                            cel:
                              description: |-
                                CEL is a string of Common Language Expression, which can be used to conditionally execute
                                the task based on the result of the expression evaluation
                                More info about CEL syntax: https://github.com/google/cel-spec/blob/master/doc/langdef.md
                              type: string
                            input:
                              description: Input is the string for guard checking which can be a static input or an output from a parent Task
                              type: string
                            operator:
                              description: Operator that represents an Input's relationship to the values
                              type: string
                            values:
                              description: |-
                                Values is an array of strings, which is compared against the input, for guard checking
                                It must be non-empty
                              type: array
                              items:
                                type: string
                              x-kubernetes-list-type: atomic
                        x-kubernetes-list-type: atomic
                  x-kubernetes-list-type: atomic
                spanContext:
                  description: SpanContext contains tracing span context fields
                  type: object
                  additionalProperties:
                    type: string
                startTime:
                  description: StartTime is the time the PipelineRun is actually started.
                  type: string
                  format: date-time
      additionalPrinterColumns:
        - name: Succeeded
          type: string
          jsonPath: ".status.conditions[?(@.type==\"Succeeded\")].status"
        - name: Reason
          type: string
          jsonPath: ".status.conditions[?(@.type==\"Succeeded\")].reason"
        - name: StartTime
          type: date
          jsonPath: .status.startTime
        - name: CompletionTime
          type: date
          jsonPath: .status.completionTime
      # Opt into the status subresource so metadata.generation
      # starts to increment
      subresources:
        status: {}
  names:
    kind: PipelineRun
    plural: pipelineruns
    singular: pipelinerun
    categories:
      - tekton
      - tekton-pipelines
    shortNames:
      - pr
      - prs
  scope: Namespaced
  conversion:
    strategy: Webhook
    webhook:
      conversionReviewVersions: ["v1beta1", "v1"]
      clientConfig:
        service:
          name: tekton-pipelines-webhook
          namespace: tekton-pipelines

---
